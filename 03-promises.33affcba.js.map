{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAqBjC,SAASI,EAAcC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEK,SAAAR,EAAUJ,MAAAK,IAGpBG,EAAO,CAAEI,SAAAR,EAAUJ,MAAAK,G,GAEpBA,E,IAGGQ,MAAK,SAAAC,G,IAAGF,EAAQE,EAARF,SAAUZ,EAAKc,EAALd,MACxBN,EAAAqB,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANjB,EAAM,M,IAE5DkB,OAAM,SAAAJ,G,IAAGF,EAAQE,EAARF,SAAUZ,EAAKc,EAALd,MAClBN,EAAAqB,OAAOI,QAAQ,sBAAqCF,OAAfL,EAAS,QAAYK,OAANjB,EAAM,M,IApChEJ,EAAKC,KAAKuB,iBAAiB,UAG3B,SAAsBC,GACpBA,EAAMC,iBAMN,IALA,IAAMC,EAAYC,OAAO,GAAoBP,OAAjBrB,EAAKI,MAAMyB,QACjCC,EAAWF,OAAO,GAAmBP,OAAhBrB,EAAKK,KAAKwB,QAC/BE,EAAaH,OAAO,GAAqBP,OAAlBrB,EAAKM,OAAOuB,QAErCG,EAAeL,EACVM,EAAI,EAAGA,EAAIF,EAAYE,GAAK,EACd,IAAjBD,IACFA,GAAgBF,GAElBvB,EAAc0B,EAAI,EAAGD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  };\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const formDelay = Number(`${refs.delay.value}`);\n  const formStep = Number(`${refs.step.value}`);\n  const formAmount = Number(`${refs.amount.value}`);\n\n  let currentDelay = formDelay;\n  for (let i = 0; i < formAmount; i += 1){\n    if (currentDelay !== 0) {\n      currentDelay += formStep;\n    };\n    createPromise(i + 1, currentDelay);\n  };  \n};\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      else {\n        reject({ position, delay });\n      };\n    }, delay);\n  });\n\n  promise.then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n};"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","setTimeout","Math","random","position","then","param","Notify","success","concat","catch","failure","addEventListener","event","preventDefault","formDelay","Number","value","formStep","formAmount","currentDelay","i"],"version":3,"file":"03-promises.33affcba.js.map"}